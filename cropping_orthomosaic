# -*- coding: utf-8 -*-
"""Copy_of_Copy_of_625__TIF_File.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Yi4nnx7VqdivUrPkgvbVf8BJwwWY96xH
"""

! pip install Pillow
! pip install opencv-python

import cv2 as cv
import matplotlib.pyplot as plt
from PIL import Image, TiffImagePlugin
import matplotlib.patches as mpatches
import numpy as np

from google.colab import drive
drive.mount('/content/drive')

img = cv.imread('/content/drive/MyDrive/GRID_51_and_54_to_58.tif', cv.IMREAD_COLOR)
#print('Image Size is {}'.format(img.shape))

cell_width = 261
cell_height = 352

plt.figure(figsize=(50, 50))
plt.imshow(img, cmap='gray', vmin=0, vmax=255)

for row in range(41):
    for col in range(127):
        # Calculate the coordinates of the current cell
        left = col * cell_width
        top = row * cell_height
        right = (col + 1) * cell_width
        bottom = (row + 1) * cell_height

        # Draw the horizontal lines
        plt.plot([left, right], [top, top], color='white', linewidth=1)  # Top line
        # Draw the vertical lines
        plt.plot([left, left], [top, bottom], color='white', linewidth=1)  # Left line

# Center the x-axis tick labels
plt.xticks(ticks=np.arange(cell_width / 2, 127 * cell_width, step=cell_width),
           labels=np.arange(127))

# Center the y-axis tick labels
plt.yticks(ticks=np.arange(cell_height / 2, 41 * cell_height, step=cell_height),
           labels=np.arange(41))

plt.xlabel('Column Number')
plt.ylabel('Row Number')

plt.grid(False)  # Disable the default grid
plt.show()

# plt.figure(figsize=(10,10))
# plt.imshow(img, cmap='gray',vmin=0, vmax=255)
#Â plt.show()

import cv2 as cv
import os

# Load your image
input_image_path = '/content/drive/MyDrive/GRID_1_6.tif'
img = cv.imread(input_image_path, cv.IMREAD_COLOR)

# Define the number of rows and columns
num_rows = 22
num_cols = 135

# Get the dimensions of the original image
image_height, image_width = img.shape[:2]

# Calculate the cell dimensions
cell_width = image_width // num_cols
cell_height = image_height // num_rows

# Output folder for cropped images
output_path_for_grid = "/content/drive/MyDrive/subimg_1_6"

# Create the output directory if it doesn't exist
os.makedirs(output_path_for_grid, exist_ok=True)

# Iterate through each cell
for row in range(num_rows):
    for col in range(num_cols):
        # Calculate the coordinates of the current cell
        left = col * cell_width
        top = row * cell_height
        right = (col + 1) * cell_width
        bottom = (row + 1) * cell_height

        # Crop the image based on the current cell's coordinates
        subimage = img[top:bottom, left:right, :]

        # Save the cropped image as a new image
        output_filename = f"subimage_{row}_{col}.png"
        output_path = os.path.join(output_path_for_grid, output_filename)
        cv.imwrite(output_path, subimage)

print(f"Cropped images saved in {output_path_for_grid}")
